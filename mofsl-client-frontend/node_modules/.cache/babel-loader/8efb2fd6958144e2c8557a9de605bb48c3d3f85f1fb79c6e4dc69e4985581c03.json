{"ast":null,"code":"var _jsxFileName = \"/home/mrunal/Documents/novazen/mofsl-client-frontend/src/components/UpdateCredentials.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Alert, Button, Card, Form, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport ClientCredentialForm from './ClientCredentialForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5005';\nconst UpdateCredentials = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    api_key: '',\n    password: '',\n    two_fa: '',\n    client_code: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [currentInfo, setCurrentInfo] = useState(null);\n  const [formErrors, setFormErrors] = useState({});\n\n  // Fetch current client information\n  useEffect(() => {\n    const fetchClientInfo = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/client-info`, {\n          withCredentials: true\n        });\n        if (response.data && response.data.status === 'SUCCESS') {\n          setCurrentInfo(response.data.client);\n\n          // Pre-fill the form with current values\n          setCredentials({\n            api_key: response.data.client.api_key || '',\n            password: '',\n            // Don't pre-fill password for security\n            two_fa: response.data.client.two_fa || '',\n            client_code: response.data.client.client_code || ''\n          });\n        }\n      } catch (err) {\n        console.error('Failed to fetch client info:', err);\n        setError('Failed to load current client information. Please try refreshing the page.');\n      }\n    };\n    fetchClientInfo();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear errors for this field\n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    setFormErrors({});\n\n    // Validate form\n    let isValid = true;\n    const newErrors = {};\n\n    // Validate PAN card format if provided\n    if (credentials.two_fa) {\n      const panRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\n      if (!panRegex.test(credentials.two_fa)) {\n        newErrors.two_fa = 'Invalid PAN card format. It should be in the format ABCDE1234F.';\n        isValid = false;\n      }\n    }\n\n    // Check if any field has been changed\n    const hasChanges = Object.values(credentials).some(value => value);\n    if (!hasChanges) {\n      setError('No changes were made. Please update at least one field.');\n      setLoading(false);\n      return;\n    }\n    if (!isValid) {\n      setFormErrors(newErrors);\n      setLoading(false);\n      return;\n    }\n\n    // Prepare the update data\n    const updateData = {};\n\n    // Only include fields that have been changed\n    if (credentials.api_key) updateData.api_key = credentials.api_key;\n    if (credentials.password) updateData.password = credentials.password;\n    if (credentials.two_fa) updateData.two_fa = credentials.two_fa;\n\n    // If userid is available in currentInfo, set vendor_info to match\n    if (currentInfo && currentInfo.userid) updateData.vendor_info = currentInfo.userid;\n    if (credentials.client_code) updateData.client_code = credentials.client_code;\n    try {\n      // Make API call to update credentials\n      const response = await axios.put(`${API_BASE_URL}/api/update-client`, updateData, {\n        withCredentials: true\n      });\n      if (response.data && response.data.status === 'SUCCESS') {\n        setSuccess(true);\n        // Clear password field after successful update\n        setCredentials(prev => ({\n          ...prev,\n          password: ''\n        }));\n      } else {\n        setError(response.data.message || 'Failed to update credentials.');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error updating credentials:', err);\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.errors) {\n        // Handle validation errors from backend\n        setFormErrors(err.response.data.errors);\n      } else {\n        var _err$response2, _err$response2$data;\n        setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'An error occurred while updating your credentials.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const isFormValid = () => {\n    // At least one field should be filled\n    const hasChanges = Object.values(credentials).some(value => value);\n    // No errors in the form\n    const noErrors = Object.keys(formErrors).length === 0;\n    return hasChanges && noErrors;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"my-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      as: \"h5\",\n      children: \"Update Your Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: currentInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Current Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Client ID: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: currentInfo.client_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User ID: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: currentInfo.userid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"PAN Card: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: currentInfo.two_fa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 23\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: \"Your credentials have been updated successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(ClientCredentialForm, {\n            credentials: credentials,\n            handleChange: handleChange,\n            isUpdate: true,\n            errors: formErrors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: loading || !isFormValid(),\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"border\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ms-2\",\n                children: \"Updating...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : 'Update Credentials'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-4\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"Loading your information...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateCredentials, \"LZARK9iLT4yNye6oBaMWg62oW58=\");\n_c = UpdateCredentials;\nexport default UpdateCredentials;\nvar _c;\n$RefreshReg$(_c, \"UpdateCredentials\");","map":{"version":3,"names":["React","useState","useEffect","Alert","Button","Card","Form","Spinner","axios","ClientCredentialForm","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","UpdateCredentials","_s","credentials","setCredentials","api_key","password","two_fa","client_code","loading","setLoading","error","setError","success","setSuccess","currentInfo","setCurrentInfo","formErrors","setFormErrors","fetchClientInfo","response","get","withCredentials","data","status","client","err","console","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","isValid","newErrors","panRegex","test","hasChanges","Object","values","some","updateData","userid","vendor_info","put","message","_err$response","_err$response$data","errors","_err$response2","_err$response2$data","isFormValid","noErrors","keys","length","className","children","Header","as","fileName","_jsxFileName","lineNumber","columnNumber","Body","client_id","variant","onSubmit","isUpdate","type","disabled","animation","size","role","_c","$RefreshReg$"],"sources":["/home/mrunal/Documents/novazen/mofsl-client-frontend/src/components/UpdateCredentials.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Alert, Button, Card, Form, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport ClientCredentialForm from './ClientCredentialForm';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5005';\n\nconst UpdateCredentials = () => {\n  const [credentials, setCredentials] = useState({\n    api_key: '',\n    password: '',\n    two_fa: '',\n    client_code: ''\n  });\n  \n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [currentInfo, setCurrentInfo] = useState(null);\n  const [formErrors, setFormErrors] = useState({});\n\n  // Fetch current client information\n  useEffect(() => {\n    const fetchClientInfo = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/client-info`, {\n          withCredentials: true\n        });\n        \n        if (response.data && response.data.status === 'SUCCESS') {\n          setCurrentInfo(response.data.client);\n          \n          // Pre-fill the form with current values\n          setCredentials({\n            api_key: response.data.client.api_key || '',\n            password: '', // Don't pre-fill password for security\n            two_fa: response.data.client.two_fa || '',\n            client_code: response.data.client.client_code || ''\n          });\n        }\n      } catch (err) {\n        console.error('Failed to fetch client info:', err);\n        setError('Failed to load current client information. Please try refreshing the page.');\n      }\n    };\n\n    fetchClientInfo();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear errors for this field\n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    setFormErrors({});\n\n    // Validate form\n    let isValid = true;\n    const newErrors = {};\n    \n    // Validate PAN card format if provided\n    if (credentials.two_fa) {\n      const panRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\n      if (!panRegex.test(credentials.two_fa)) {\n        newErrors.two_fa = 'Invalid PAN card format. It should be in the format ABCDE1234F.';\n        isValid = false;\n      }\n    }\n    \n    // Check if any field has been changed\n    const hasChanges = Object.values(credentials).some(value => value);\n    if (!hasChanges) {\n      setError('No changes were made. Please update at least one field.');\n      setLoading(false);\n      return;\n    }\n    \n    if (!isValid) {\n      setFormErrors(newErrors);\n      setLoading(false);\n      return;\n    }\n\n    // Prepare the update data\n    const updateData = {};\n    \n    // Only include fields that have been changed\n    if (credentials.api_key) updateData.api_key = credentials.api_key;\n    if (credentials.password) updateData.password = credentials.password;\n    if (credentials.two_fa) updateData.two_fa = credentials.two_fa;\n    \n    // If userid is available in currentInfo, set vendor_info to match\n    if (currentInfo && currentInfo.userid) updateData.vendor_info = currentInfo.userid;\n    if (credentials.client_code) updateData.client_code = credentials.client_code;\n\n    try {\n      // Make API call to update credentials\n      const response = await axios.put(\n        `${API_BASE_URL}/api/update-client`, \n        updateData,\n        { withCredentials: true }\n      );\n\n      if (response.data && response.data.status === 'SUCCESS') {\n        setSuccess(true);\n        // Clear password field after successful update\n        setCredentials(prev => ({\n          ...prev,\n          password: ''\n        }));\n      } else {\n        setError(response.data.message || 'Failed to update credentials.');\n      }\n    } catch (err) {\n      console.error('Error updating credentials:', err);\n      if (err.response?.data?.errors) {\n        // Handle validation errors from backend\n        setFormErrors(err.response.data.errors);\n      } else {\n        setError(err.response?.data?.message || 'An error occurred while updating your credentials.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const isFormValid = () => {\n    // At least one field should be filled\n    const hasChanges = Object.values(credentials).some(value => value);\n    // No errors in the form\n    const noErrors = Object.keys(formErrors).length === 0;\n    \n    return hasChanges && noErrors;\n  };\n\n  return (\n    <Card className=\"my-4\">\n      <Card.Header as=\"h5\">Update Your Credentials</Card.Header>\n      <Card.Body>\n        {currentInfo ? (\n          <>\n            <div className=\"mb-4\">\n              <h6>Current Information:</h6>\n              <p>Client ID: <strong>{currentInfo.client_id}</strong></p>\n              <p>User ID: <strong>{currentInfo.userid}</strong></p>\n              <p>PAN Card: <strong>{currentInfo.two_fa}</strong></p>\n            </div>\n\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {success && <Alert variant=\"success\">Your credentials have been updated successfully!</Alert>}\n\n            <Form onSubmit={handleSubmit}>\n              <ClientCredentialForm \n                credentials={credentials} \n                handleChange={handleChange} \n                isUpdate={true}\n                errors={formErrors}\n              />\n\n              <Button \n                variant=\"primary\" \n                type=\"submit\" \n                disabled={loading || !isFormValid()}\n              >\n                {loading ? (\n                  <>\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                    <span className=\"ms-2\">Updating...</span>\n                  </>\n                ) : (\n                  'Update Credentials'\n                )}\n              </Button>\n            </Form>\n          </>\n        ) : (\n          <div className=\"text-center p-4\">\n            <Spinner animation=\"border\" />\n            <p className=\"mt-2\">Loading your information...</p>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default UpdateCredentials;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/mrunal/Documents/novazen/mofsl-client-frontend/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import { Container, Spinner } from 'react-bootstrap';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Context providers\n// import { AuthProvider, useAuth } from './contexts/AuthContext';\n\n// Components\nimport NavbarComponent from './components/NavbarComponent';\nimport PrivateRoute from './components/PrivateRoute';\nimport Login from './components/Login';\n// import RegisterClient from './components/RegisterClient';\nimport Dashboard from './components/Dashboard';\nimport ClientSettings from './components/ClientSettings';\nimport UpdateCredentials from './components/UpdateCredentials';\n// import ForgotPassword from './components/ForgotPassword';\nimport NotFound from './components/NotFound';\n\n// Main application router component with auth checking\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  // const { loading, isAuthenticated } = useAuth();\n\n  // // Show loading spinner while checking authentication\n  // if (loading) {\n  //   return (\n  //     <Container className=\"d-flex justify-content-center align-items-center vh-100\">\n  //       <Spinner animation=\"border\" role=\"status\">\n  //         <span className=\"visually-hidden\">Loading...</span>\n  //       </Spinner>\n  //     </Container>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 40\n      }, this), \" : \", /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \" : \", /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \" : \", /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 34\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"settings\",\n          element: /*#__PURE__*/_jsxDEV(ClientSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"settings/credentials\",\n          element: /*#__PURE__*/_jsxDEV(ClientSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"update-credentials\",\n          element: /*#__PURE__*/_jsxDEV(UpdateCredentials, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: true,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// Main App component wrapped with context providers\n_c = AppRouter;\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // <AuthProvider>\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-container\",\n        children: /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n    // </AuthProvider>\n  );\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppRouter\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","ToastContainer","NavbarComponent","PrivateRoute","Login","Dashboard","ClientSettings","UpdateCredentials","NotFound","jsxDEV","_jsxDEV","Fragment","_Fragment","AppRouter","children","fileName","_jsxFileName","lineNumber","columnNumber","path","to","element","index","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","_c","App","className","_c2","$RefreshReg$"],"sources":["/home/mrunal/Documents/novazen/mofsl-client-frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import { Container, Spinner } from 'react-bootstrap';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Context providers\n// import { AuthProvider, useAuth } from './contexts/AuthContext';\n\n// Components\nimport NavbarComponent from './components/NavbarComponent';\nimport PrivateRoute from './components/PrivateRoute';\nimport Login from './components/Login';\n// import RegisterClient from './components/RegisterClient';\nimport Dashboard from './components/Dashboard';\nimport ClientSettings from './components/ClientSettings';\nimport UpdateCredentials from './components/UpdateCredentials';\n// import ForgotPassword from './components/ForgotPassword';\nimport NotFound from './components/NotFound';\n\n// Main application router component with auth checking\nconst AppRouter = () => {\n  // const { loading, isAuthenticated } = useAuth();\n\n  // // Show loading spinner while checking authentication\n  // if (loading) {\n  //   return (\n  //     <Container className=\"d-flex justify-content-center align-items-center vh-100\">\n  //       <Spinner animation=\"border\" role=\"status\">\n  //         <span className=\"visually-hidden\">Loading...</span>\n  //       </Spinner>\n  //     </Container>\n  //   );\n  // }\n\n  return (\n    <>\n      {<NavbarComponent />}\n      \n      <Routes>\n        {/* Public routes */}\n        {/* <Route path=\"/login\" element={!isAuthenticated ? <Login /> : <Navigate to=\"/\" />} />\n        <Route path=\"/register\" element={!isAuthenticated ? <RegisterClient /> : <Navigate to=\"/\" />} />\n        <Route path=\"/forgot-password\" element={!isAuthenticated ? <ForgotPassword /> : <Navigate to=\"/\" />} /> */}\n        <Route path=\"/login\" ></Route> <Login /> : <Navigate to=\"/\" />\n        <Route path=\"/register\" ></Route> : <Navigate to=\"/\" />\n        <Route path=\"/forgot-password\" ></Route> : <Navigate to=\"/\"/>\n        \n        {/* Protected routes */}\n        <Route path=\"/\" element={<PrivateRoute />}>\n          <Route index element={<Dashboard />} />\n          \n          {/* Settings routes */}\n          <Route path=\"settings\" element={<ClientSettings />} />\n          <Route path=\"settings/credentials\" element={<ClientSettings />} />\n          <Route path=\"update-credentials\" element={<UpdateCredentials />} />\n        </Route>\n        \n        {/* Not found route */}\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n      \n      {/* Toast notifications container */}\n      <ToastContainer \n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n};\n\n// Main App component wrapped with context providers\nfunction App() {\n  return (\n    // <AuthProvider>\n      <Router>\n        <div className=\"app-container\">\n          <AppRouter />\n        </div>\n      </Router>\n    // </AuthProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
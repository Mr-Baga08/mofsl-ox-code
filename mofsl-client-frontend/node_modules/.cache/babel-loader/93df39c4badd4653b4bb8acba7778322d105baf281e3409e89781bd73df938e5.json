{"ast":null,"code":"var _jsxFileName = \"/home/mrunal/Documents/novazen/mofsl-client-frontend/src/components/RegisterClient.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Alert, Button, Card, Form, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport ClientCredentialForm from './ClientCredentialForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5005';\nconst RegisterClient = () => {\n  _s();\n  const navigate = useNavigate();\n  const [credentials, setCredentials] = useState({\n    client_id: '',\n    api_key: '',\n    userid: '',\n    password: '',\n    two_fa: '',\n    vendor_info: '',\n    client_code: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // If changing userid, also update vendor_info behind the scenes\n    if (name === 'userid') {\n      setCredentials(prev => ({\n        ...prev,\n        vendor_info: value\n      }));\n    }\n\n    // Clear errors for this field\n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    setFormErrors({});\n\n    // Validate form\n    let isValid = true;\n    const newErrors = {};\n\n    // Required fields\n    const requiredFields = ['client_id', 'api_key', 'userid', 'password', 'two_fa'];\n    requiredFields.forEach(field => {\n      if (!credentials[field]) {\n        newErrors[field] = `This field is required`;\n        isValid = false;\n      }\n    });\n\n    // Validate PAN card format\n    if (credentials.two_fa) {\n      const panRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\n      if (!panRegex.test(credentials.two_fa)) {\n        newErrors.two_fa = 'Invalid PAN card format. It should be in the format ABCDE1234F.';\n        isValid = false;\n      }\n    }\n    if (!isValid) {\n      setFormErrors(newErrors);\n      setLoading(false);\n      return;\n    }\n    try {\n      // Ensure vendor_info matches userid\n      const registerData = {\n        ...credentials,\n        vendor_info: credentials.userid\n      };\n\n      // Make API call to register\n      const response = await axios.post(`${API_BASE_URL}/api/register`, registerData);\n      if (response.data && response.data.status === 'SUCCESS') {\n        setSuccess(true);\n\n        // Redirect to login page after short delay\n        setTimeout(() => {\n          navigate('/login');\n        }, 2000);\n      } else {\n        setError(response.data.message || 'Failed to register client.');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error registering client:', err);\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.errors) {\n        // Handle validation errors from backend\n        setFormErrors(err.response.data.errors);\n      } else {\n        var _err$response2, _err$response2$data;\n        setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'An error occurred while registering the client.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const isFormValid = () => {\n    // All required fields should be filled\n    const requiredFields = ['client_id', 'api_key', 'userid', 'password', 'two_fa'];\n    const allRequiredFilled = requiredFields.every(field => credentials[field]);\n\n    // No errors in the form\n    const noErrors = Object.keys(formErrors).length === 0;\n    return allRequiredFilled && noErrors;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"my-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      as: \"h5\",\n      children: \"Register New Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: \"Client registered successfully! Redirecting to login page...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(ClientCredentialForm, {\n          credentials: credentials,\n          handleChange: handleChange,\n          isUpdate: false,\n          errors: formErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: loading || !isFormValid(),\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\",\n              role: \"status\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ms-2\",\n              children: \"Registering...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : 'Register Client'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterClient, \"hkdgAD8vkNK5Ul8DLghUnL1WuHg=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterClient;\nexport default RegisterClient;\nvar _c;\n$RefreshReg$(_c, \"RegisterClient\");","map":{"version":3,"names":["React","useState","Alert","Button","Card","Form","Spinner","axios","useNavigate","ClientCredentialForm","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","RegisterClient","_s","navigate","credentials","setCredentials","client_id","api_key","userid","password","two_fa","vendor_info","client_code","loading","setLoading","error","setError","success","setSuccess","formErrors","setFormErrors","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","isValid","newErrors","requiredFields","forEach","field","panRegex","test","registerData","response","post","data","status","setTimeout","message","err","_err$response","_err$response$data","console","errors","_err$response2","_err$response2$data","isFormValid","allRequiredFilled","every","noErrors","Object","keys","length","className","children","Header","as","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","onSubmit","isUpdate","type","disabled","animation","size","role","_c","$RefreshReg$"],"sources":["/home/mrunal/Documents/novazen/mofsl-client-frontend/src/components/RegisterClient.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Alert, Button, Card, Form, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport ClientCredentialForm from './ClientCredentialForm';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5005';\n\nconst RegisterClient = () => {\n  const navigate = useNavigate();\n  const [credentials, setCredentials] = useState({\n    client_id: '',\n    api_key: '',\n    userid: '',\n    password: '',\n    two_fa: '',\n    vendor_info: '',\n    client_code: ''\n  });\n  \n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCredentials(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // If changing userid, also update vendor_info behind the scenes\n    if (name === 'userid') {\n      setCredentials(prev => ({\n        ...prev,\n        vendor_info: value\n      }));\n    }\n    \n    // Clear errors for this field\n    if (formErrors[name]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    setFormErrors({});\n\n    // Validate form\n    let isValid = true;\n    const newErrors = {};\n    \n    // Required fields\n    const requiredFields = ['client_id', 'api_key', 'userid', 'password', 'two_fa'];\n    requiredFields.forEach(field => {\n      if (!credentials[field]) {\n        newErrors[field] = `This field is required`;\n        isValid = false;\n      }\n    });\n    \n    // Validate PAN card format\n    if (credentials.two_fa) {\n      const panRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;\n      if (!panRegex.test(credentials.two_fa)) {\n        newErrors.two_fa = 'Invalid PAN card format. It should be in the format ABCDE1234F.';\n        isValid = false;\n      }\n    }\n    \n    if (!isValid) {\n      setFormErrors(newErrors);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Ensure vendor_info matches userid\n      const registerData = {\n        ...credentials,\n        vendor_info: credentials.userid\n      };\n      \n      // Make API call to register\n      const response = await axios.post(\n        `${API_BASE_URL}/api/register`, \n        registerData\n      );\n\n      if (response.data && response.data.status === 'SUCCESS') {\n        setSuccess(true);\n        \n        // Redirect to login page after short delay\n        setTimeout(() => {\n          navigate('/login');\n        }, 2000);\n      } else {\n        setError(response.data.message || 'Failed to register client.');\n      }\n    } catch (err) {\n      console.error('Error registering client:', err);\n      if (err.response?.data?.errors) {\n        // Handle validation errors from backend\n        setFormErrors(err.response.data.errors);\n      } else {\n        setError(err.response?.data?.message || 'An error occurred while registering the client.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const isFormValid = () => {\n    // All required fields should be filled\n    const requiredFields = ['client_id', 'api_key', 'userid', 'password', 'two_fa'];\n    const allRequiredFilled = requiredFields.every(field => credentials[field]);\n    \n    // No errors in the form\n    const noErrors = Object.keys(formErrors).length === 0;\n    \n    return allRequiredFilled && noErrors;\n  };\n\n  return (\n    <Card className=\"my-4\">\n      <Card.Header as=\"h5\">Register New Client</Card.Header>\n      <Card.Body>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {success && (\n          <Alert variant=\"success\">\n            Client registered successfully! Redirecting to login page...\n          </Alert>\n        )}\n\n        <Form onSubmit={handleSubmit}>\n          <ClientCredentialForm \n            credentials={credentials} \n            handleChange={handleChange} \n            isUpdate={false}\n            errors={formErrors}\n          />\n\n          <Button \n            variant=\"primary\" \n            type=\"submit\" \n            disabled={loading || !isFormValid()}\n          >\n            {loading ? (\n              <>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                <span className=\"ms-2\">Registering...</span>\n              </>\n            ) : (\n              'Register Client'\n            )}\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RegisterClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}